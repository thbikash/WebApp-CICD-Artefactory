name: Deploy Node.js App to Azure Web App from Artifact

on:
  workflow_dispatch:
    inputs:
      build_run_id:
        description: 'ID of the build workflow run to deploy'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      id-token: write # <--- CRUCIAL FOR OIDC AUTHENTICATION

    environment:
      name: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "GitHub CLI authenticated"

      - name: Download Artifact from CI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir downloaded
          gh run download ${{ github.event.inputs.build_run_id }} -n webapp-artifact -D downloaded

      - name: List Downloaded Files
        run: ls -lh downloaded
      
      - name: Azure Login (using OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # Remove the 'creds' line if you are switching to OIDC.
          # If AZURE_CREDENTIALS was a Service Principal JSON, you can keep it,
          # but OIDC is preferred for GitHub Actions.

      - name: Extract tar file
        run:
          tar -xzvf downloaded/webapp-*.tar.gz

      - name: Zip for Azure
        # Ensure your application's deployable content is at the root of the current directory
        # after extraction. If it's in a subfolder (e.g., 'dist'), you might need to
        # zip that specific subfolder: zip -r webapp.zip ./dist
        run: zip -r webapp.zip .

      - name: Deploying to Azure App Service  
        run:
          echo "Deploying to Azure App Service"
          az webapp deploy \
            --resource-group Development-RG --name WebApp-CICD-Agile --src-path webapp.zip --type zip --restart true
